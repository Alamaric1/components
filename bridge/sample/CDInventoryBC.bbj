REM /**
REM  * CDInventoryBC.bbj
REM  * @author beff
REM  *
REM  */
use com.basiscomponents.db.DataRow
use com.basiscomponents.db.ResultSet

class public CDInventoryBC

    field private   ResultSet           ResultSet!
    field private   DataRow             Filter!
    field protected java.sql.Connection Connection!
    field protected java.sql.ResultSet  JDBCResultSet!
    
   rem /**
    rem * Method openDatabase:
    rem * open the connection to the database
    rem */
    method protected void openDatabase()

    
        if #Connection! = null() then
                #Connection! = BBjAPI().getJDBCConnection("CDStore","",err=connectError)
        endif

        if #Connection! = null() then goto connectError

        methodret


        connectError:
            throw "Could not connect to data source CDStore",12
            methodret

    methodend


    rem /**
    rem * Method closeDatabase:
    rem * close the connection to the database
    rem */
    method protected void closeDatabase()

        if #Connection! <> null() then
            #Connection!.close()
            #Connection! = null()
        fi

    methodend


    method public ResultSet retrieve()
        
        if #ResultSet! = null()
            #ResultSet! = new ResultSet()
            
            sql$="SELECT * FROM CDINVENTORY"
            
            if #Filter! <> null() then

                f! = #Filter!.getFieldNames()
                it! = f!.iterator()
                while it!.hasNext()                
                    if wh$>"" then
                        wh$=wh$+" AND "
                    fi
                    f$=it!.next()
                    rem naive - need to build based on field types!!
                    c$=#Filter!.getFieldAsString(f$)
                    if pos("%"=c$)>0 then
                        wh$=wh$+f$+" LIKE '"+c$+"'"
                    else
                        wh$=wh$+f$+"='"+c$+"'"
                    fi
                    sql$=sql$+" WHERE "+wh$
                wend
            fi

            #openDatabase()
            
            stmt! = #Connection!.createStatement(java.sql.ResultSet.TYPE_SCROLL_INSENSITIVE, java.sql.ResultSet.CONCUR_READ_ONLY)
            #JDBCResultSet! = cast(java.sql.ResultSet,stmt!.executeQuery(sql$))
            
            while #JDBCResultSet!.next()
                row! = new DataRow(#JDBCResultSet!)
                #ResultSet!.addItem(row!)
            wend
            
            #closeDatabase()
         fi
         
        methodret #ResultSet!
    
    methodend


    method public void setFilter(DataRow filter!)
    
        #Filter! = filter!
        #JDBCResultSet! = null()
        #ResultSet! = null()
    
    methodend

classend
