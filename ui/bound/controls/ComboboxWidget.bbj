use ::components/ui/bound/controls/ControlWidget.bbj::ControlWidget
use ::components/bl/BusinessComponent.bbj::BusinessComponent
use com.basiscomponents.db.DataRow

class public  ComboboxWidget extends ControlWidget
 
    field protected BBjComboBox Cb!
    field protected BBjStaticText Static!
    field protected BBjNumber IDX
 
    method public ComboboxWidget(BBjChildWindow cwCanvas!)
        #super!(cwCanvas!)
        cwWidget! = cwCanvas!.addChildWindow(cwCanvas!.getAvailableControlID(),0,0,1,1,"",$00010800$,BBjAPI().getSysGui().getAvailableContext())
        cwWidget!.setBackColor(BBjAPI().makeColor("WHITE"))
        #setWnd(cwWidget!)
        #Cb! = cast(BBjListButton,cwWidget!.addListButton(100,0,0,10,10,"..."))
        #Cb!.setEditable(1) 
        #setCtrl(#Cb!)
        
        #Cb!.setCallback(BBjAPI.ON_LIST_CHANGE,#this!,"onListChange")
        
        #Static! = cast(BBjStaticText,cwWidget!.addStaticText(101,0,0,10,10,""))
        #Static!.setVisible(1)
        #Static!.addStyle("StaticRepresentation")   
       
        #Cb!.setOpaque(0)
        #Cb!.setBackColor(BBjAPI().makeColor("WHITE"))
        #Static!.setOpaque(0)
       
       
    methodend
    
    method public void onListChange(BBjListChangeEvent ev!)
        #IDX = ev!.getSelectedIndex()
        x$=ev!.getSelectedItem()
        #Static!.setText(x$)
        #asyncUpdate(x$)
        if #getName() = "TYPE" Then 
            bc! = #getBC()
            uic! = bc!.getTTuic()
            edrow! = #getBC().getEditedRecord()
            x$=edrow!.getFieldAsString("TYPE")
            v! = new BBjVector()
            v!.addItem(x$)
            uic!.drive("TYPE",v!)
        fi
    methodend 
    
    method public void displayData()
          #setEdited(0)
          if !#getEnabled() then
              if #IDX>-1 then
                  #Static!.setText(#Cb!.getItemAt(#IDX))
              else
                    #Static!.setText("-")
              fi
          fi          
          
    methodend
    
    method public void setSize(BBjNumber w!, BBjNumber h!)
        #super!.setSize(w!,h!)
        #Cb!.setSize(w!,200)
        #Static!.setSize(w!,h!)
    methodend    

    rem /**
    rem * Method setEditing:
    rem * invoked from BusinessComponent if a UI component started editing a record in the resultset
    rem * @param BBjNumber isEditing: -1 = i
    rem */
    method public void setEditing(BBjNumber isEditing)
    
        if isEditing=0  then
            #setEdited(0)
        fi
        
    methodend
    
    method public void setEnabled(BBjNumber fEnabled!)
    
        if fEnabled! <> #getEnabled() then
            #super!.setEnabled(fEnabled!)
            #Cb!.setVisible(fEnabled!)
            #Static!.setVisible(!fEnabled!)
            
REM             if !fEnabled! then
REM                 if #IDX>-1 then
REM                     #Static!.setText(#Cb!.getItemAt(#IDX))
REM                 fi
REM             fi
        fi
        
    methodend        

    method public BBjNumber getControlType()
        methodret -2
    methodend
    
    method public void removeAllItems()
        #Static!.setText( "")
        #Cb!.removeAllItems()
    methodend

    method public void addItem(BBjString x!)
        #Cb!.addItem(x!)
    methodend
    
    method public void insertItems(BBjNumber id!, BBjVector v!)
        #Cb!.insertItems(id!, v!)
    methodend
    
    method public void selectIndex(BBjNumber x!)
        #Cb!.selectIndex(x!)
        #IDX = x!
        t$=""
        if x!>-1 then
            t$=#Cb!.getItemAt(x!)
        fi
        #Static!.setText(t$)
   methodend
   
   method public BBjNumber getSelectedIndex()
        methodret #IDX 
   methodend
   
   method public void setText(BBjString t!)
        rem this is a noop on the combo box
   methodend
   
classend
