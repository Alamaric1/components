use ::components/ui/bound/UIComponent.bbj::UIComponent
use ::components/bl/BusinessComponent.bbj::BusinessComponent
use com.basiscomponents.db.DataRow
use com.basiscomponents.db.DataField
use ::components/ui/unbound/TouchGrid.bbj::TouchGrid
use ::components/util/Util.bbj::Util
use ::i18n/CustomTranslator.bbj::CustomTranslator

class public TouchGridComponent extends UIComponent implements BBjControl

    field private TouchGrid TouchGrid!
    field private BBjStaticText ResultInfo!
    field private BBjButton NewButton! 

    field private Object            SelChangeObject!
    field private BBjString         SelChangeMethod$
    
    field private static BBjNumber ON_SELCHANGE=100
    


    method public TouchGridComponent (BBjChildWindow cw!)

        #super!(cw!)
        #initialize()

    methodend

    method public TouchGridComponent (BBjWindow wnd!, BBjNumber id, BBjNumber x, BBjNumber y, BBjNumber w, BBjNumber h)

        #super!(wnd!,id,x,y,w,h)
        #initialize()

    methodend

    method public BBjNumber ON_SELCHANGE()
        methodret #ON_SELCHANGE
    methodend 
    
    method public void setCallback(BBjNumber event!, CustomObject o!, BBjString method!)
    
        #SelChangeObject! = o!
        #SelChangeMethod$ = method!
    
    methodend    
    
    method private void initialize()
    
        cw! = #super!.getWnd()
        #TouchGrid! = new TouchGrid(cw!,100,0,0,cw!.getWidth(),cw!.getHeight())
        #TouchGrid!.setCallback(#TouchGrid!.ON_SELCHANGE(),#this!,"onGridSelChange")
        
        #ResultInfo!=cast(BBjStaticText,cw!.addStaticText(101,10,10,cw!.getWidth()-20,40,#getTranslator().getTranslation("NO_RESULT"),$0010$ ))
        #ResultInfo!.addStyle("TouchGridResultinfo")

        
        #NewButton! = cast(BBjButton, cw!.addButton (102,cw!.getWidth()-50,cw!.getHeight()-50,40,40,"",$0010$ ) )
        #NewButton!.addStyle("NewButton") 
        #NewButton!.setFocusable(0)
        #NewButton!.setCallback(BBjAPI.ON_BUTTON_PUSH,#this!,"onBtnNew")
    methodend

    method public void setSize(BBjNumber w!, BBjNumber h!)

        #super!.setSize(w!,h!)
        #TouchGrid!.setSize(w!,h!)
        #ResultInfo!.setSize(w!-20,40)
        #NewButton!.setLocation(w!-50,h!-50)
    methodend


    method public void setVisible(BBjNumber v)

        #super!.setVisible(v)

    methodend

    method public void setBC(BusinessComponent bc!)

        #super!.setBC(bc!)

    methodend

    method private BBjString replaceLabels(BBjString t$)
     
        t! = new CustomTranslator()   
 
        while pos("$T{"=T$)>0 
            o=pos("$T{"=T$)
            lbl$=t$(o+3)
            if pos("}"=lbl$)=0 then
                break
            else
                lbl$=lbl$(1,pos("}"=lbl$)-1)
            fi
            trl$ = t!.getTranslation(lbl$)
            t$=t$(1,o-1)+trl$+t$(o+len(lbl$)+4)
        wend
          
        methodret t$
        
     methodend
     
     method public void setRowTemplate(BBjString html$)
        
        html$=#replaceLabels(html$)
        #TouchGrid!.setRowTemplate(html$)
    methodend

    method public void loadRowTemplate(BBjString file$)
        ch=unt
        open (ch)file$
        while 1
            read record (ch,siz=1000,end=*break)l$
            t$=t$+l$
        wend
        close (ch)

        #setRowTemplate(t$)     
    methodend

    method public void refresh( BBjNumber resetFilter)

            s=#getBC().size()
            
REM             s=min(s,1000)
            rem fixme limited max count!!!
            #getBC().prepareResultSet(0,s)
            #TouchGrid!.setItems(#getBC().getResultSet())
        if (s>0) then
            #ResultInfo!.setVisible(0)
            #TouchGrid!.setVisible(1)
        else
            #ResultInfo!.setVisible(1)
            #TouchGrid!.setVisible(0)
        fi

    methodend


    method public void onSelectionChange()
            #TouchGrid!.deselect()
    methodend
    
    method public void onGridSelChange(BBjNumber sel)
    
        #getBC().setSelection(sel)

        if sel>-1 and #SelChangeObject!<>null() and #SelChangeMethod$<>"" then
            Util.invoke(#SelChangeObject!, #SelChangeMethod$, sel)
        fi
    
    methodend

    rem callback functions for Business Component
    rem /**
    rem * Method setEditing
    rem * invoked from BusinessComponent if a UI component started editing a record in the resultset
    rem * @param BBjNumber isEditing: -1 = i
    rem */
    method public void setEditing(BBjNumber isEditing)

        #getWnd().setEnabled(!isEditing)
        
    methodend
    
    
    method public void setShowNewButton(BBjNumber show)
    
        #NewButton!.setVisible(show)
    
    methodend
    
    method public void onBtnNew(BBjEvent ev!)

        #getBC().broadcastNewRecord()

    methodend

  

classend


