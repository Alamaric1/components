use ::components/ui/bound/UIComponent.bbj::UIComponent
use ::components/bl/BusinessComponent.bbj::BusinessComponent
use com.basiscomponents.db.DataRow
use com.basiscomponents.db.DataField
use ::components/ui/unbound/TouchGrid.bbj::TouchGrid
use ::components/util/Util.bbj::Util


class public TouchGridComponent extends UIComponent implements BBjControl

    field private TouchGrid TouchGrid!
    field private BBjStaticText ResultInfo!

    field private Object            SelChangeObject!
    field private BBjString         SelChangeMethod$
    
    field private static BBjNumber ON_SELCHANGE=100
    


    method public TouchGridComponent (BBjChildWindow cw!)

        #super!(cw!)
        #initialize()

    methodend

    method public TouchGridComponent (BBjWindow wnd!, BBjNumber id, BBjNumber x, BBjNumber y, BBjNumber w, BBjNumber h)

        #super!(wnd!,id,x,y,w,h)
        #initialize()

    methodend

    method public BBjNumber ON_SELCHANGE()
        methodret #ON_SELCHANGE
    methodend 
    
    method public void setCustomCallback(BBjNumber event!, Object o!, BBjString method!)
    
        #SelChangeObject! = o!
        #SelChangeMethod$ = method!
    
    methodend    
    
    method private void initialize()
    
        cw! = #super!.getWnd()
        #TouchGrid! = new TouchGrid(cw!,100,0,0,cw!.getWidth(),cw!.getHeight())
        #TouchGrid!.setCustomCallback(#TouchGrid!.ON_SELCHANGE(),#this!,"onGridSelChange")
        
        #ResultInfo!=cast(BBjStaticText,cw!.addStaticText(101,10,10,cw!.getWidth()-20,40,#getTranslator().getTranslation("NO_RESULT")))
        #ResultInfo!.addStyle("TouchGridResultinfo")
        #ResultInfo!.setVisible(0)

    methodend

    method public void setSize(BBjNumber w!, BBjNumber h!)

        #super!.setSize(w!,h!)
        #TouchGrid!.setSize(w!,h!)
        #ResultInfo!.setSize(w!-20,40)

    methodend


    method public void setVisible(BBjNumber v)

        #super!.setVisible(v)

    methodend

    method public void setBC(BusinessComponent bc!)

        #super!.setBC(bc!)

    methodend
 
     method public void setRowTemplate(BBjString html$)
        #TouchGrid!.setRowTemplate(html$)
    methodend

    method public void loadRowTemplate(BBjString file$)
        #TouchGrid!.loadRowTemplate(file$)
    methodend

    method public void refresh( BBjNumber resetFilter)

        s=#getBC().size()
            s=min(s,200)
            rem fixme limited max count!!!
            #getBC().prepareResultSet(0,s)
            #TouchGrid!.setItems(#getBC().getResultSet())
        if (s>0) then
            #ResultInfo!.setVisible(0)
        else
            #ResultInfo!.setVisible(1)
        fi

    methodend


    method public void onSelectionChange()

    methodend
    
    method public void onGridSelChange(BBjNumber sel)
    
        #getBC().setSelection(sel)

        if sel>-1 and #SelChangeObject!<>null() and #SelChangeMethod$<>"" then
            Util.invoke(#SelChangeObject!, #SelChangeMethod$, sel)
        fi
    
    methodend

    rem callback functions for Business Component
    rem /**
    rem * Method setEditing
    rem * invoked from BusinessComponent if a UI component started editing a record in the resultset
    rem * @param BBjNumber isEditing: -1 = i
    rem */
    method public void setEditing(BBjNumber isEditing)

        #getWnd().setEnabled(!isEditing)
        
    methodend

  

classend


