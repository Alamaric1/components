REM if INFO(3,6)<>"5" then
REM     ::components/util/Util.bbj::Util.runAsBui(pgm(-1))
REM fi


use ::components/util/Util.bbj::Util
use ::components/i18n/i18n.bbj::i18n

class public WindowStackHelper

    method public void onClose(BBjCloseEvent ev!)
        WindowStack.closeWindow()
    methodend

    method public void onExitButton(BBjButtonPushEvent ev!)
        WindowStack.exitAll()
    methodend
    
    method public void onBackButton(BBjButtonPushEvent ev!)
        WindowStack.closeWindow()
    methodend    

    method public void onResize( BBjResizeEvent ev!)
        WindowStack.resize(ev!.getWidth(),ev!.getHeight())
    methodend

    method public void onScreenResize( BBjScreenResizeEvent ev!)
        WindowStack.resize(ev!.getWidth(),ev!.getHeight())
    methodend

classend

class public WindowStack

    rem todo: make this poor implementation i little more slick by introducing a container class and one single stack 
    field private static BBjVector WindowList! = new BBjVector()
    field private static BBjVector WidgetList! = new BBjVector()
    field private static BBjVector BackActionList! = new BBjVector()
    field private static BBjVector BackActionObjectList! = new BBjVector()
    field private static BBjVector BackActionPayloadList! = new BBjVector()
    field private static BBjVector ExitActionList! = new BBjVector()
    field private static BBjVector ExitActionObjectList! = new BBjVector()
    field private static BBjVector ExitActionPayloadList! = new BBjVector()
        
        
    rem this is for BUI only, when embedded in another child window
    field private static BBjWindow ContainerWnd!

    method public static void setContainerWnd(BBjChildWindow cw!)
        #ContainerWnd! = cw!
    methodend

    method public static BBjChildWindow openWindow(BBjString name$)

        sg! = BBjAPI().getSysGui(err=*next); goto got_sysgui
            sg! = BBjAPI().openSysGui("X0")
        got_sysgui:

        wh! = new WindowStackHelper()
        if INFO(3,6)<>"5" and #ContainerWnd! = null() then
            rem GUI
            wnd! = sg!.addWindow(sg!.getAvailableContext(), 10*#WindowList!.size(),10*#WindowList!.size(),1024,768,name$,$00080093$ )
            wnd!.setCallback(BBjAPI.ON_CLOSE,wh!,"onClose")
            wnd!.setCallback(BBjAPI.ON_RESIZE,wh!,"onResize")
        else
            if #ContainerWnd! = null() then
                screenSize! = BBjAPI().getSysGui().getSystemMetrics().getScreenSize()
                ContainerWnd! = sg!.addWindow(0,0,screenSize!.width,screenSize!.height,"",$01081010$ )
                ContainerWnd!.maximize()
                ContainerWnd!.setCallback(BBjAPI.ON_SCREEN_RESIZE , wh! ,"onScreenResize")
                ContainerWnd!.setVisible(1)
                #ContainerWnd! = CAST(BBjWindow,ContainerWnd!)
            fi

            if #WindowList!.size() then
                wnd! = #WindowList!.getItem(#WindowList!.size()-1)
                wnd!.setVisible(0)
            fi

            wnd!     = #ContainerWnd!.addChildWindow(#ContainerWnd!.getAvailableControlID(),0,0,#ContainerWnd!.getWidth(),#ContainerWnd!.getHeight(),"",$00000800$,sg!.getAvailableContext())
            wnd!.setBackColor(BBjAPI().makeColor("WHITE"))
            wnd!.setVisible(1)
            
        fi
        #WindowList!.addItem(wnd!)
        #WidgetList!.addItem(null())
        #BackActionList!.addItem("")
        #BackActionObjectList!.addItem("")
        #BackActionPayloadList!.addItem("")
        #ExitActionList!.addItem("")
        #ExitActionObjectList!.addItem("")
        #ExitActionPayloadList!.addItem("")

        yoffs=0

REM         if INFO(3,6)="5"  or #ContainerWnd!<>null() then
            yoffs=60
REM         fi
        
        w=wnd!.getWidth()
        if info(3,6)<>"5" then
            tb_shadow! = wnd!.addChildWindow(1101,0,0,w,yoffs-2,"",$00000800$,sg!.getAvailableContext())
            tb_shadow!.setBackColor(BBjAPI().makeColor(200,200,200))
        fi
        tb!     = wnd!.addChildWindow(101,0,0,w,yoffs-4,"",$00000800$,sg!.getAvailableContext())
        if info(3,6)="5" then
            tb!.addStyle("ToolBar")
        else
            tb!.setBackColor(BBjAPI().makeColor(asc($80$) ,asc($2A$), asc($50$)))
        fi
        
        cw!     = wnd!.addChildWindow(100,0,yoffs,w,wnd!.getHeight()-yoffs,"",$00000800$,sg!.getAvailableContext())

        Translator! = i18n.getTranslator()

        if yoffs or #ContainerWnd!<>null() then

            backButton!=tb!.addButton(101,5,5,45,45,"Back")
            backButton!.setVisible(0) 
            backButton!.setName("backButton")
            backButton!.addStyle("BackButton")
            backButton!.setCallback(BBjAPI.ON_BUTTON_PUSH,wh!,"onBackButton")
            backButton!.setOpaque(0)
            backButton!.setClientEdge(0)
            backButton!.setImageFile("ico/back.png")
            backButton!.setToolTipText(Translator!.getTranslation("TOOLTIP_PREV"))
            st! = tb!.addStaticText(102,150,14,w-200,30,name$)
            st!.setOpaque(0)
            if info(3,6)="5" then
                st!.addStyle("WindowStackTitle")
            else
                st!.setFont(BBjAPI().getSysGui().makeFont("SourceSansPro-Light",14,0))
                st!.setForeColor(BBjAPI().makeColor(255,255,255))
            fi
            st!.setVisible(1)
            rem todo: find a better place for that piece

        fi

        exitButton!=tb!.addButton(103,w-50,5,45,45,"Exit")
        exitButton!.setVisible(1) 
        exitButton!.setOpaque(0)
        exitButton!.setClientEdge(0)
        exitButton!.setName("exitButton")
        exitButton!.setImageFile("ico/exit.png")
        exitButton!.setToolTipText(Translator!.getTranslation("TOOLTIP_EXIT"))
        exitButton!.addStyle("ExitButton")
        exitButton!.setCallback(BBjAPI.ON_BUTTON_PUSH,wh!,"onExitButton")


REM         if #WindowList!.size()=1 then
REM             backButton!.setVisible(0)
REM         fi

        wnd!.setVisible(1)
        methodret cw!

    methodend


    method public static void setShowBackButton(BBjNumber visible)
         wnd! = #WindowList!.getItem(#WindowList!.size()-1)
         wnd!.getControl(101).getControl(101).setVisible(visible)
    methodend
    
    method public static void setShowExitButton(BBjNumber visible)
         wnd! = #WindowList!.getItem(#WindowList!.size()-1)
         wnd!.getControl(101).getControl(103).setVisible(visible)
    methodend    

    method public static BBjNumber getShowBackButton()
        wnd! = #WindowList!.getItem(#WindowList!.size()-1)
        if wnd! <> null() then
          c! = wnd!.getControl(101).getControl(101,err=*next)
          if c! <> null() then
              ret=c!.isVisible()
          fi
        fi
        methodret ret

    methodend

    method public static void setBackButtonAction(Object target!, BBjString callback$, Object payload!)
        #BackActionList!.removeItem(#BackActionList!.size()-1)
        #BackActionList!.addItem(callback$)
        #BackActionObjectList!.removeItem(#BackActionObjectList!.size()-1)
        #BackActionObjectList!.addItem(target!)
        #BackActionPayloadList!.removeItem(#BackActionPayloadList!.size()-1)
        #BackActionPayloadList!.addItem(payload!)
    methodend

    method public static void clearBackButtonAction()
        WindowStack.setBackButtonAction(null(),"",null())
    methodend
    
    method public static void setExitButtonAction(Object target!, BBjString callback$, Object payload!)
        #ExitActionList!.removeItem(#ExitActionList!.size()-1)
        #ExitActionList!.addItem(callback$)
        #ExitActionObjectList!.removeItem(#ExitActionObjectList!.size()-1)
        #ExitActionObjectList!.addItem(target!)
        #ExitActionPayloadList!.removeItem(#ExitActionPayloadList!.size()-1)
        #ExitActionPayloadList!.addItem(payload!)
    methodend

    method public static void closeWindow()

        if #WindowList!.size() then
            if #BackActionList!.size() then
                action$ = #BackActionList!.getItem(#BackActionList!.size()-1)
                obj!    = #BackActionObjectList!.getItem(#BackActionObjectList!.size()-1)
                pay!    = #BackActionPayloadList!.getItem(#BackActionPayloadList!.size()-1)
                if obj!<>null() and cvs(action$,3)<>"" then
                    if payl! = null() then
    
                        Util.invoke(obj!,action$)
                    else
                        Util.invoke(obj!,action$,payl!)
                    fi
                    rem there was a back button action set
                    rem so only do that one and nothing else
                    methodret
                fi

                wnd! = #WindowList!.getItem(#WindowList!.size()-1)
                uiw! = #WidgetList!.getItem(#WindowList!.size()-1)
                #WindowList!.removeItem(#WindowList!.size()-1)
                #WidgetList!.removeItem(#WidgetList!.size()-1)
                #BackActionList!.removeItem(#BackActionList!.size()-1)
                #BackActionObjectList!.removeItem(#BackActionObjectList!.size()-1)
                #BackActionPayloadList!.removeItem(#BackActionPayloadList!.size()-1)
                #ExitActionList!.removeItem(#ExitActionList!.size()-1)
                #ExitActionObjectList!.removeItem(#ExitActionObjectList!.size()-1)
                #ExitActionPayloadList!.removeItem(#ExitActionPayloadList!.size()-1)
                

            fi
            if uiw! <> null() then
                uiw!.destroy()
            fi
            wnd!.destroy()
        fi

        if #WindowList!.size()=0 then
            BBjAPI().postPriorityCustomEvent("WindowStackEmpty","")
        else
            wnd! = #WindowList!.getItem(#WindowList!.size()-1)
            wnd!.setVisible(1)

            if INFO(3,6)="5" and #ContainerWnd! <>null() then
                #resize(#ContainerWnd!.getWidth(), #ContainerWnd!.getHeight())
            fi
        fi

    methodend
    
    method public static void exitAll()
        action$ = #ExitActionList!.getItem       (#ExitActionList!.size()-1)
        obj!    = #ExitActionObjectList!.getItem (#ExitActionObjectList!.size()-1)
        pay!    = #ExitActionPayloadList!.getItem(#ExitActionPayloadList!.size()-1)
        #closeWindow()
        if obj! <> null() and cvs(action$,3)>"" then
            if payl! = null() then
                Util.invoke(obj!,action$)
            else
                Util.invoke(obj!,action$,payl!)
            fi
        fi
    methodend

    method public static void resize (BBjNumber w, BBjNumber h)
        if #WindowList!.size() then

            yoffs=0
            if ( INFO(3,6)="5" and #WindowList!.size()>1 ) or #ContainerWnd! <> null() then
                yoffs=60
            fi
            wnd! = #WindowList!.getItem(#WindowList!.size()-1)
            wnd!.setSize(w,h)
            uiw! = #WidgetList!.getItem(#WidgetList!.size()-1)
            if uiw! <> null() then
                uiw!.setSize(w,h-yoffs)
            fi
            
            tb! = wnd!.getControl(101)
            tb!.setSize(w,yoffs-4)
            tb!.getControl(103).setLocation(w-50,5)

            st! = tb!.getControl(102)
            x=st!.getX()
            st!.setSize(wnd!.getWidth()-x-50,st!.getHeight())
            
        fi
    methodend

    method public static void setWidget(BBjControl uiw!)
            #WidgetList!.setItem(#WidgetList!.size()-1,uiw!)

            if INFO(3,6)="5" and #ContainerWnd! <>null() then
                #resize(#ContainerWnd!.getWidth(), #ContainerWnd!.getHeight())
            fi

            if INFO(3,6)="5" then
                wnd! = #WindowList!.getItem(#WindowList!.size()-1)
                #resize(wnd!.getWidth(),wnd!.getHeight())
            fi
    methodend


    method public static BBjNumber addButton(BBjString name$, BBjString caption$, BBjString cssclass$, CustomObject CallbackObj!, BBjString CallbackMethod$)
        id=2000
        wnd! = #WindowList!.getItem(#WindowList!.size()-1)
        tb! = wnd!.getControl(101)
        
        while 1
            test! = tb!.getControl(id,err=*break)
            id=id+1
        wend
        declare auto BBjButton button!
        Button!=tb!.addButton(id,50*(id-2000+1),5,45,45,caption$)
        Button!.setToolTipText(caption$)
        Button!.setOpaque(0)
        Button!.setClientEdge(0)
        if cvs(name$,3)>"" then
            Button!.setName(name$)
        fi
        if cvs(cssclass$,3)>"" then
            Button!.addStyle(cssclass$)
        fi
        Button!.setCallback(BBjAPI.ON_BUTTON_PUSH,CallbackObj!,CallbackMethod$)    
        
        st! = tb!.getControl(102)
        x=int(50*(id-2000+3))
        st!.setLocation(x,14)
        st!.setSize(wnd!.getWidth()-x-50,st!.getHeight())
        methodret id    
    methodend 
    
    method public static void addButtonStyle(BBjNumber id, BBjString style$)
        ctrl! = #getButton(id)
        if ctrl!<>null() then
            ctrl!.addStyle(style$)
        fi
    methodend 

    method public static void setButtonImageFile(BBjNumber id, BBjString img$)
        ctrl! = #getButton(id)
        if ctrl!<>null() and img$>"" then
            ctrl!.setImageFile(img$) 
        fi
    methodend 
    
   method public static void setButtonToolTip(BBjNumber id, BBjString tooltip$)
        ctrl! = #getButton(id)
        if ctrl!<>null() and tooltip$ > "" then
            ctrl!.setToolTipText(tooltip$)
        fi
    methodend 

    rem deprecated - remove asap
    method public static void setImageFile(BBjNumber id, BBjString img$)
        #setButtonImageFile(id,img$)
    methodend 

    method public static void setButtonEnabled(BBjNumber id, BBjNumber enable)
        ctrl! = #getButton(id)
        if ctrl!<>null() then
            ctrl!.setEnabled(enable) 
        fi
    methodend     

    method public static void removeButtonStyle(BBjNumber id, BBjString style$)
        ctrl! = #getButton(id)
        if ctrl!<>null() then
            ctrl!.removeStyle(style$)
        fi
    methodend 
    
    method private static BBjButton getButton(BBjNumber id)
        wnd! = #WindowList!.getItem(#WindowList!.size()-1)
        tb! = wnd!.getControl(101)
        methodret tb!.getControl(id,err=*next)
        methodret null()
    methodend


classend

class public testWidget implements BBjControl

    field private BBjChildWindow Cw!

    method private testWidget()
    methodend

    method public testWidget(BBjChildWindow cw!)
        #Cw! = cw!
        cw!.addStaticText(101,10,50,400,25,"")
        #render()
    methodend

    method public void onClose(BBjButtonPushEvent ev!)
        WindowStack.closeWindow()
    methodend

    method private void render()
        #Cw!.getControl(101).setText(str(#Cw!.getWidth())+","+str(#Cw!.getHeight()))
    methodend

    method public void setSize(BBjNumber w!, BBjNumber h!)
        #Cw!.setSize(w!,h!)
        #render()
    methodend
    
    method public void destroy()
        
    methodend

classend

if 1=2 then

  sg! = BBjAPI().openSysGui("X0")
  wnd! = sg!.addWindow(sg!.getAvailableContext(), 10,10,1024,768,"Hallo Welt",$00080093$ )
  cw_frame! = wnd!.addChildWindow(100,10,10,800,600,"",$00000800$,sg!.getAvailableContext())
  wnd!.setCallback(wnd!.ON_CLOSE,"byebye")
  wnd!.setVisible(1)
  WindowStack.setContainerWnd(cw_frame!)

fi

cw! = WindowStack.openWindow("Eins")
t!  = new testWidget(cw!)
WindowStack.setWidget(t!)

btn! = cw!.addButton(100,10,10,200,25,"open Zwei")
btn!.setCallback(BBjAPI.ON_BUTTON_PUSH,"openZwei")

BBjAPI().setCustomEventCallback("WindowStackEmpty","byebye")
helper! = new helper()

process_events



openZwei:
    cw2! = WindowStack.openWindow("Zwei")
    t1!  = new testWidget(cw2!)
    WindowStack.setWidget(t1!)
    WindowStack.setShowBackButton(1)

    b=WindowStack.addButton("test","test","test",helper!,"bark")
    WindowStack.addButtonStyle(b,"blabla")
    WindowStack.removeButtonStyle(b,"test")


    btn2! = cw2!.addButton(100,10,10,200,25,"open ZweiA")
    btn2!.setCallback(BBjAPI.ON_BUTTON_PUSH,"openZweiA")
    return

openZweiA:
    cw2a! = WindowStack.openWindow("ZweiA")
    WindowStack.setShowBackButton(1)
    return


byebye:
    release

    
    class public helper
        method public void bark(BBjEvent ev!)
            a=msgbox("wuff")
        methodend
    classend