use ::components/ui/unbound/UIWidget.bbj::UIWidget

class public ResponsiveSplitPane


    field private BBjNumber X
    field private BBjNumber Y
    field private BBjNumber W
    field private BBjNumber H
    field private BBjChildWindow CwCanvas!
    field private BBjChildWindow CwLeft!
    field private BBjChildWindow CwRight!
    field private BBjButton      BtnBack!
    field private BBjButton      BtnSlideOpen!
    field private UIWidget UiwLeft!
    field private UIWidget UiwRight!
    field private BBjNumber DisplayMode
    field private BBjNumber PreferredLeftSize = 300
    
    field private BBjNumber AutoHideLeft = 1

    method public ResponsiveSplitPane(BBjWindow wnd!, BBjNumber id, BBjNumber x, BBjNumber y, BBjNumber w, BBjNumber h)

        #X = x
        #Y = y
        #W = w
        #H = h
        #CwCanvas! = wnd!.addChildWindow(id,x,y,w,h,"",$00000800$,BBjAPI().getSysGui().getAvailableContext())
        #setup()
    methodend
    
    method public ResponsiveSplitPane(BBjChildWindow wnd!)
        #CwCanvas! = wnd!
        #X = wnd!.getX()
        #Y = wnd!.getY()
        #W = wnd!.getWidth()
        #H = wnd!.getHeight()
        #setup()
    methodend
    
    method private void setup()
        
        #CwRight!    = #CwCanvas!.addChildWindow(101,10,10,10,10,"",$00000810$,BBjAPI().getSysGui().getAvailableContext())
        #CwRight!.addStyle("FormWnd")
        #CwRight!.setName("CwRight") 
        #CwLeft!     = #CwCanvas!.addChildWindow(100,0,0,10,10,"",$00000800$,BBjAPI().getSysGui().getAvailableContext())
        #BtnBack! = #CwCanvas!.addButton(200,5,5,80,30,"",$0010$)
        #BtnBack!.setCallback(BBjAPI.ON_BUTTON_PUSH,#this!,"onButtonBack")
        #BtnBack!.setName("BackButton")
        #BtnBack!.addStyle("BackButtonStyle")
        #BtnSlideOpen! = #CwCanvas!.addButton(201,0,0,25,80,"",$0010$)
        #BtnSlideOpen!.setCallback(BBjAPI.ON_BUTTON_PUSH,#this!,"onButtonBack")
        #BtnSlideOpen!.setName("SlideOpenButton")
        #BtnSlideOpen!.addStyle("SlideOpenButtonStyle")
              
        #setSize(#W,#H)
        
    methodend
    
    method public void onButtonBack( BBjButtonPushEvent ev!)
        #activateLeft()
    methodend

    method public void setSize(BBjNumber w!, BBjNumber h!)
    
        #H = h!
        #W = w!
        #CwCanvas!.setSize(w!,h!)
   
        if w! >2*#PreferredLeftSize or h! >900 then
            #DisplayMode = 0   ; rem tablet
        else
            if #DisplayMode <>2 then
                #DisplayMode = 1 ; rem show left pane in phone mode when mode was tablet before
            fi
        fi
        switch #DisplayMode
            case 0
              #CwLeft!.setSize(#PreferredLeftSize,h!)
              if #UiwLeft!<>null() then
                #UiwLeft!.setSize(#PreferredLeftSize,h!)
              fi                 
              #CwLeft!.setLocation(0,0)
              #CwLeft!.setVisible(1)              
              #CwRight!.setSize(w!-#PreferredLeftSize,h!)
              if #UiwRight!<>null() then
                 if #AutoHideLeft then
                    #UiwRight!.setSize(w!-29,h!)
                 else
                    #UiwRight!.setSize(w!-#PreferredLeftSize,h!)
                 fi
              fi
                     
              if #AutoHideLeft then
                    #CwRight!.setLocation(28,0)
              else      
                    #CwRight!.setLocation(#PreferredLeftSize+1,0)
              fi
              
              #CwRight!.setVisible(1)
              #BtnBack!.setVisible(0)
              #BtnBack!.setLocation(0,0)
              #BtnBack!.setSize(25,h!)
              
              if #DisplayMode = 0 AND #AutoHideLeft then
                if #BtnSlideOpen!.isVisible() then
                  #CwRight!.setEnabled(1)
                  #CwLeft!.setVisible(0)
                else
                  #CwRight!.setEnabled(0)
                  #CwLeft!.setVisible(1)
                fi
              fi

              
REM               #CwLeft!.setBackColor(BBjAPI().makeColor("RED"))
REM               #CwRight!.setBackColor(BBjAPI().makeColor("GREEN"))
            break
            
            case 1
              #activateLeft()
              #BtnSlideOpen!.setVisible(0)
REM               #CwLeft!.setBackColor(BBjAPI().makeColor("BLUE"))
REM               #CwRight!.setBackColor(BBjAPI().makeColor("YELLOW"))              
            break

            case 2
            
              #activateRight()
                  #BtnSlideOpen!.setVisible(0)
REM               #CwLeft!.setBackColor(BBjAPI().makeColor("BLUE"))
REM               #CwRight!.setBackColor(BBjAPI().makeColor("YELLOW"))              
            break
        swend
        
        
    
    methodend
    
    method public void activateRight()

              if #DisplayMode = 0 then 
                if #AutoHideLeft then
                    #CwLeft!.setVisible(0)
                    #BtnSlideOpen!.setVisible(1)    
                    #CwRight!.setEnabled(1)
                fi
              else
                  #DisplayMode = 2 
                  #CwRight!.setSize(#W,#H-40)
                  if #UiwRight!<>null() then
                    #UiwRight!.setSize(#W,#H-40)
                  fi
                  #CwRight!.setLocation(0,40)
                  #CwRight!.setVisible(1)
                  #CwLeft!.setVisible(0)
                  #BtnBack!.setVisible(1)        
              fi

    methodend

    method public void activateLeft()

              if #DisplayMode = 0 then 
                if #AutoHideLeft then
                    #CwLeft!.setVisible(1)
                    #BtnSlideOpen!.setVisible(0)  
                    #CwRight!.setEnabled(0)  
                fi
              else
                  #DisplayMode=1
                  #CwLeft!.setSize(#W,#H)
                  if #UiwLeft!<>null() then
                    #UiwLeft!.setSize(#W,#H)
                  fi              
                  #CwLeft!.setLocation(0,0)
                  #CwLeft!.setVisible(1)
                  #CwRight!.setVisible(0)
                  #BtnBack!.setVisible(0)        
              fi

    methodend


    method public BBjChildWindow getLeft()
    
        methodret #CwLeft!
        
    methodend

    method public BBjChildWindow getRight()
    
        methodret #CwRight!
        
    methodend
    
    method public void setUiwLeft(UIWidget uiw!)
        
            #UiwLeft! = uiw!
            
    methodend

    method public void setUiwRight(UIWidget uiw!)
        
            #UiwRight! = uiw!
            
    methodend
    
    method public void destroy()
    
    methodend
    

classend

sg! = BBjAPI().openSysGui("X0")

if INFO(3,6)="5" then 
  wnd! = sg!.addWindow(0,0,1024,768,"",$01081010$ )
  wnd!.setCallback(BBjAPI.ON_SCREEN_RESIZE,"resize")
else
  wnd! = sg!.addWindow(0,0,1024,768,"")
  wnd!.setCallback(BBjAPI.ON_RESIZE,"resize")
fi

wnd!.setCallback(wnd!.ON_CLOSE,"byebye")
wnd!.setVisible(1)



cw! = wnd!.addChildWindow(100,0,00,wnd!.getWidth(),wnd!.getHeight(),"",$00000800$,BBjAPI().getSysGui().getAvailableContext())
split! = new ResponsiveSplitPane(cw!)
split!.setSize(wnd!.getWidth(),wnd!.getHeight())

btn! = split!.getLeft().addButton(100,10,10,250,25,"klick")
btn!.setCallback(btn!.ON_BUTTON_PUSH,"flip")

wnd!.focus()
? 'HIDE'

process_events

byebye:
bye

flip:
    split!.activateRight()
return

resize:
    ev! = BBjAPI().getLastEvent()
    w = ev!.getWidth()
    h = ev!.getHeight()
    
    split!.setSize(w,h)
return

WIN_CLOSE:
    release
