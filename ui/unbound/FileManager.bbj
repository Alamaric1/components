REM /**
REM  * FileManager.bbj
REM  * @author atimm
REM  *
REM  */
use ::translations/bbtranslator.bbj::BBTranslator
use ::components/i18n/i18n.bbj::i18n
use ::FileChooser/FileChooser.bbj::FileChooser
use java.io.File
use java.nio.file.Files
use java.nio.file.Path
use java.io.FileOutputStream
use java.util.UUID


class public FileManager implements BBjControl

    field private static BBjSysGui  SysGui! = bbjapi().getSysGui()
    field private BBjChildWindow    CwCanvas!
    field private BBjListBox        Files!
    field private BBjButton         Refresh!
    field private BBjButton         Upload!
    field private BBjButton         ShowFile!
    field private static Boolean TRUE! = bbjapi().TRUE
    field private static Boolean FALSE!= bbjapi().FALSE
    field private BBjString pathToFiles$
    field private BBjNumber space=10
    field private BBjNumber icoSize=32
    field private BBjString currentFile$=""
    field private static BBjString htdocs$=System.getProperty("basis.BBjHome")+java.io.File.separator+"htdocs/deliver"
    field private static BBjString jettyPort$ = "8888"
    field private static BBjString separator$ = java.io.File.separator
    field private static BBTranslator  Translator! = i18n.getTranslator()

    field private BBjString Name$

    rem /**
    rem  * Public constructor
    rem  * @param wnd BBjWindow container the FileNamager will be placed on
    rem  * @param id  unique id for the childWindow
    rem  * @param x x location
    rem  * @param y y location
    rem  * @param w width
    rem  * @param h height
    rem  */
    method public FileManager(BBjWindow wnd!, BBjNumber id,BBjNumber x,BBjNumber y,BBjNumber width, BBjNumber height)
        #CwCanvas!  = wnd!.addChildWindow(id,x,y,width,height,"",$00000800$,#SysGui!.getAvailableContext())
        #Files!     = #CwCanvas!.addListBox(#CwCanvas!.getAvailableControlID(),#space,#space+#icoSize,#CwCanvas!.getWidth()-(2*#space),#CwCanvas!.getHeight()-(3*#space+#icoSize),"")
        #Refresh!   = #CwCanvas!.addButton(#CwCanvas!.getAvailableControlID(),#space,0,#icoSize,#icoSize,"")
        #Upload!    = #CwCanvas!.addButton(#CwCanvas!.getAvailableControlID(),(2*#space)+#icoSize,0,#icoSize,#icoSize,"")
        #ShowFile!  = #CwCanvas!.addButton(#CwCanvas!.getAvailableControlID(),(3*#space)+2*#icoSize,0,#icoSize,#icoSize,"")

        rem #pathToFiles$ = System.getProperty("java.io.tmpdir")

        imgMan! = BBjAPI().getSysGui().getImageManager()
        #Refresh!.setImage(imgMan!.loadImageFromBytes(#getIconRefresh()))
        #Upload!.setImage(imgMan!.loadImageFromBytes(#getIconUpload()))
        #ShowFile!.setImage(imgMan!.loadImageFromBytes(#getIconDownload()))
        #setCallback()
    methodend

    rem /**
    rem  * sets File location for the FileManager
    rem  * @param pathToFiles$  path to the files
    rem  */
    method public void setPathToFiles(BBjString pathToFiles$)
        #pathToFiles$=pathToFiles$
        #refreshFileList()
    methodend

    rem /**
    rem  * get File location for the FileManager
    rem  */
    method public BBjString getPathToFiles()
        methodret #pathToFiles$
    methodend

    rem /**
    rem  * register callbacks
    rem  */
    method public void setCallback()
        #Refresh!.setCallback(#Refresh!.ON_BUTTON_PUSH,#this!,"refreshButtonPush")
        #Upload!.setCallback(#Upload!.ON_BUTTON_PUSH,#this!,"uploadButtonPush")
        #Files!.setCallback(#Files!.ON_LIST_CLICK,#this!,"filesListClick")
        #ShowFile!.setCallback(#ShowFile!.ON_BUTTON_PUSH,#this!,"showFileButtonPush")
    methodend

    rem /**
    rem  * handles refreshButton BUTTON_PUSH event
    rem  * @param e BBjButtonPushEvent
    rem  */
    method public void refreshButtonPush(BBjButtonPushEvent e!)
        #refreshFileList()
    methodend

    rem /**
    rem  * handles uploadButton BUTTON_PUSH event
    rem  * @param e BBjButtonPushEvent
    rem  */
    method public void uploadButtonPush(BBjButtonPushEvent e!)
        #upload()
    methodend

    rem  */
    rem  * handles showFileButtonPush BUTTON_PUSH event
    rem  * @param e BBjButtonPushEvent
    rem  */
    method public void showFileButtonPush(BBjButtonPushEvent e!)
        #showFile()
    methodend

    rem /**
    rem  * copy selected file to client
    rem  */
    method public void showFile()
        seterr errorShowFile
        if #currentFile$<>"" then
            inBui = (info(3,6) = "5")
            if !inBui then
                cPath$=""
                cPath$=filesave("Save As...", "", #currentFile$, "", MODE="CLIENT")
            endif
            if inBui or cPath$ <> "::CANCEL::" then
                if inBui then cPath$ = #currentFile$ fi
                cfs! = bbjapi().getThinClient().getClientFileSystem()
                cf! = cfs!.getClientFile(cPath$)
                cf!.copyToClient(#pathToFiles$+#separator$+#currentFile$)
            endif
        endif

        methodret
        errorShowFile:
        System.out.println("err:"+str(err)+" in "+str(pgm(-2))+" "+str(tcb(5))+" "+errmes(-1))
    methodend

    rem /**
    rem  * updates the currentSelected file #currentFile$
    rem  * @param e BBjListClickEvent
    rem  */
    method public void filesListClick(BBjListClickEvent e!)
        selectedIndex=e!.getSelectedIndex()
        lb! = e!.getControl()
        if selectedIndex>-1 then
            #currentFile$ = str(lb!.getItemAt(selectedIndex))
        endif
    methodend

    rem /**
    rem  * retrives the file list from the pathToFiles directory
    rem  * @return vec vector that holds the file list
    rem  */
    method public BBjVector getFileList()
        declare BBjVector vec!
        vec! = new BBjVector()

        ch=unt
        mkdir #pathToFiles$,err=*next
        open(ch)#pathToFiles$
        while 1
            read record(ch,end=*break)file$
            if file$(1,1)="." then continue
            tmpch=unt
            open(tmpch,err=*continue)#pathToFiles$+#separator$+file$
            tmpFid$=fid(tmpch);close(tmpch)
            if tmpfid$(1,1)=$05$ then continue endif
            vec!.addItem(file$)
        wend
        close(ch)
        methodret vec!
    methodend

    rem /**
    rem  * handles file updload using the FileChooser
    rem  */
    method public void upload()
        declare FileChooser  fc!
        declare BBjNamespace ns!
        declare BBjVector    paths!
        declare BBjClientFileSystem cfs!

        cfs! = bbjapi().getThinClient().getClientFileSystem()

        nsVar$ = pgm(-2)+info(3,0)
        ns! = BBjAPI().getGroupNamespace()
        ns!.setValue(nsVar$,"process_events")
        fc! = new FileChooser("",nsVar$,1)
        user_action$=ns!.getValue(nsVar$+"_user_action")
        if user_action$ = "::CANCEL::" then
            methodret
        else
            paths! = fc!.getSelectedFiles()
            if paths!.size()>0 then
                declare String cFileName!
                declare File source!
                declare FileOutputStream target!
                for i=0 to paths!.size()-1
                    cFileName! = paths!.getItem(i).toString()
                    cFile! = cfs!.getClientFile(cFileName!)
                    serverFile! = cFile!.copyFromClient()

                    if cFileName!.contains(java.io.File.separator) then
                        fileName$ = cFileName!.substring(cFileName!.lastIndexOf(java.io.File.separator))
                    else
                        fileName$ = cFileName!
                    endif
                    source! = new File(serverFile!)
                    target! = new FileOutputStream(#pathToFiles$+fileName$)

                    Files.copy(source!.toPath(),target!)
                    target!.close()
                    source!.delete()
                next i
            endif
        endif
        #refreshFileList()
        rem a=msgbox(#Translator!.getTranslation("FILE_UPLOAD_COMPLETE"),64,"")
    methodend

    rem /**
    rem  * refreshes the file list
    rem  */
    method public void refreshFileList()
        #Files!.removeAllItems()
        files! = #getFileList()
        #Files!.insertItems(0,files!)
    methodend

    rem /**
    rem  * set the location of the FileManger ( child window )
    rem  * @param x x location
    rem  * @param y y location
    rem  */
    method public void setLocation(BBjNumber x!,BBjNumber y!)
        #CwCanvas!.setLocation(x!,y!)
    methodend


    method public void setEnabled(BBjNumber x!)
        rem #Refresh!.setVisible(x!)
        rem #Upload!.setVisible(x!)
        #CwCanvas!.setEnabled(x!)
    methodend

    rem /**
    rem  * sets the size of the FileManager child window and resizes the controls on the FileManager's childwindow
    rem  * @param width
    rem  * @param height
    rem  */
    method public void setSize(BBjNumber width!,BBjNumber height!)
        #Files!.setSize(width!-(2*#space),height!-(3*#space+#icoSize))
        #Refresh!.setLocation(#space,0)
        #Upload!.setLocation((2*#space)+#icoSize,0)
        #ShowFile!.setLocation((3*#space)+2*#icoSize,0)
        #CwCanvas!.setSize(width!,height!)
    methodend

    method public void setName(BBjString text!)
        #Name$=str(text!)
    methodend

    method public void setText(BBjString text!)
    methodend

    method public void setFont(BBjFont font!)
REM         #getCtrl().setFont(font!)
    methodend

    method public void setBackColor(BBjColor col!)
REM         #getCtrl().setBackColor(col!)
    methodend

    method public BBjNumber getWidth()
        methodret #getWnd().getWidth()
    methodend

    method public BBjNumber getHeight()
        methodret #getWnd().getHeight()
    methodend

    method public Boolean isVisible()
REM         methodret #getWnd().isVisible()
    methodend

    method public BBjString getName()
        methodret #Name$
    methodend

    method public void destroy()
        #CwCanvas!.destroy()
    methodend

    method protected BBjString getIconUpload()

        methodret $89504E470D0A1A0A0000000D49484452000000100000001008060000001FF3FF61000000017352474200AECE1CE90000000467414D410000B18F0BFC6105000000097048597300000EC200000EC20115284A800000007949444154384F6360C001FEFDFBE704C43FA1D809973AACE2404D2AFFFFFFFF00C430F00128A64E94214085A2407C1B493398091203C9E13504A88013884FA26B86F141722035580D012A62064A6EC4A519C910901A660C43809A2710D28C64C864BC5EC1651051810852346A00D141855BE130084452420100170B83102A91080B0000000049454E44AE426082$

    methodend

    method protected BBjString getIconDownload()

        methodret $89504E470D0A1A0A0000000D49484452000000100000001008060000001FF3FF61000000017352474200AECE1CE90000000467414D410000B18F0BFC6105000000097048597300000EC200000EC20115284A800000007B49444154384F6360C002FEE300D8D462151B780388762A2E8503EF8521EA827FFFFE4DC3E5747471905A8C08002A62064A6C246408540D33D618044A7202F1495C8680E4406AF0A613A0025120BE8DC5D9B74172442532A0422DA0011F900CF90012234A334C1150831310FF84622792342319120534200A9F6600D5CC89CAC4627FDE0000000049454E44AE426082$

    methodend

    method protected BBjString getIconRefresh()

        methodret

    methodend

classend


REM /**
REM  * sample
REM  */
wnd! = BBjAPI().openSysGui("X0").addWindow(10,10,800,700,"FileManager")
wnd!.setCallback(wnd!.ON_CLOSE,"byebye")
wnd!.setCallback(wnd!.ON_RESIZE,"resize")
declare FileManager c!

c! = new FileManager(wnd!,101,10,10,wnd!.getWidth(),wnd!.getHeight())
c!.setPathToFiles("D:/tmp/test123/")

c!.setName("TEST")

process_events
byebye:bye


resize:
    declare BBjResizeEvent rEvent!
    rEvent! = cast(BBjResizeEvent,bbjapi().getLastEvent())
    c!.setSize(rEvent!.getWidth(),rEvent!.getHeight())
    return
