use ::BBUtils.bbj::BBUtils

class public Util

    rem /**
    rem * Method invoke:
    rem * invoke a method in a given class and pass an object with data
    rem * @param Object obj!: the object that holds the method that will be called
    rem * @param BBjString nethodName$: the name of the method
    rem * @param Object payload!: the object that is passed to the method
    rem */
    method public static void invoke(Object obj!, BBjString methodName$, Object payload!)

        if obj!<>null() and methodName$>"" and payload! <> null() then
            dummy$=stbl("!OPTIONS","EXECUTE_CALLED_PROGRAM=TRUE")
            o! = obj!
            p! = payload! 
            x$="o!."+methodname$+"(p!)"

REM see https://bugzilla.basis.com/show_bug.cgi?id=28270
REM Bug 28270 - program drops to console after EXECUTE when called from a method that had been invoked using another EXECUTE 
REM             execute x$
REM do the old (slower) way until there's a fix for this edge condition:

            temp$ = str(java.io.File.createTempFile("blabla", ".call"))
            ch=unt
            open (ch)temp$
            write (ch)"ENTER"+$0a$+x$+$0a$+"EXIT"+$0a$
            close (ch)
            call temp$
            erase temp$
        fi

    methodend

    rem /**
    rem * Method invoke:
    rem * invoke a method in a given class and pass an object with data
    rem * @param Object obj!: the object that holds the method that will be called
    rem * @param BBjString nethodName$: the name of the method
    rem * @param Object payload!: the object that is passed to the method
    rem */
    method public static void invoke(Object obj!, BBjString methodName$)

        if obj!<>null() and methodName$>""  then

            x$="obj!."+methodname$+"()"
            temp$ = str(java.io.File.createTempFile("blabla", ".call"))
            ch=unt
            open (ch)temp$
            write (ch)"ENTER"+$0a$+x$+$0a$+"EXIT"+$0a$
            close (ch)
            call temp$
            erase temp$
        fi

    methodend
    
    rem /**
    rem * Method static newInstance:
    rem * create a new instance for a given class name
    rem * @param BBjString class$: the name of the class
    rem * @return Object: the new instance of the given class name
    rem */
    method public static Object newInstance(BBjString class$)

        
        x$="x! = new "+class$+"()"
        temp$ = str(java.io.File.createTempFile("blabla", ".call"))
        ch=unt
        open (ch)temp$
        write (ch)"SETERR my_trap"
        write (ch)"ENTER"+$0a$+x$+$0a$+"EXIT"+$0a$
        write(ch)"my_trap:"+$0a$+"EXIT"+$0a$
        close (ch)
        call temp$
        erase temp$

        methodret x!

        REM searching for something like 
        REM 
        REM class! =  CustomObject.forName("::oeval.bbj::foo")
        REM y! = class!.newInstance()
        REM 
        REM OR
        REM 
        REM y! = CustomObject.newInstance("::oeval.bbj::foo")

    methodend    

    method public static void runAsBui(BBjString p$)

        fullPath! = p$
        fullPath! = fullPath!.replace("\","/");rem /xxx/yyy/zzz.bbj
        path$ = fullPath!.substring(0,pos("/"=fullPath!,-1));rem /xxx/yyy/
        source$ = fullPath!.substring(pos("/"=fullPath!,-1));rem zzz.bbj
        if pos("."=source$) then
            name$ = source$(1,pos("."=source$,-1)-1)
        else
            name$ = source$
        endif

        clo! = BBjAPI().getConfig().getCurrentCommandLineObject()
        config$ = clo!.getConfigFile()
        if pos($22$=config$)=1 then
            config$=config$(2)
        endif
        if pos($22$=config$,-1)=len(config$) then
            config$=config$(1,len(config$)-1)
        endif

        argsVect!=new BBjVector()
        
        BBUtils.registerBUIApp(source$,name$,config$,path$,System.getProperty("user.name"),argsVect!,1)
        BBUtils.setShowClientConfirmationDialog(name$,0)
        BBUtils.setBUISplash(name$, "components/css/LoadImage.png", 1)
        BBUtils.applyCss(name$, "components/css/style.css", 1)
        
        ch=unt
        open (ch)"components/ui/fonts/"
        while 1
            read record (1,end=*break)d$
            if D$(1,1)="." then continue
            BBUtils.copyFileToWebServer("components/ui/fonts/"+d$,"fonts")
        wend
        close (ch)

        
        open (ch)"components/css/"
        while 1
            read record (1,end=*break)d$
            if D$(1,1)="." then continue
            BBUtils.copyFileToWebServer("components/css/"+d$,"res")
        wend
        close (ch)
            
        protocol$=BBUtils.getWebServerProtocol()
        host$=BBUtils.getWebServerHost()
        port$=BBUtils.getWebServerPort()
        url$ = protocol$ + "://" + host$ + ":" + port$ + "/apps/" + name$
        BBjAPI().getThinClient().browse(url$)            
        release

     methodend

    
    method public static BBjString getJettyBaseUrl()
        if INFO(3,6)<>"5" then
            port$ = java.lang.System.getProperty("com.basis.jetty.port")
            host$ = java.lang.System.getProperty("com.basis.jetty.host")    
            url$="http://"+host$+":"+port$+"/"
        else
            rem for BUI take the base url out of the url itself
            bui! = bbjapi().getBuiManager()
            url$=bui!.getUrl()
            url$=url$(1,pos("/"=url$,1,3))
        fi
        methodret url$
    methodend  


classend